
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: On feature

on:
  pull_request:    
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Setup ENV
        run: echo "ENV Setup"
        env:
              db_user: ${{ secrets.DB_USER }}
              password: ${{ secrets.DB_PASSWORD }}
              kakao_client_id: ${{ secrets.KAKAO_CLIENT_ID }}
              kakao_client_secret: ${{ secrets.KAKAO_CLIENT_SECRET }}
              kakao_redirect_url: ${{ secrets.KAKAO_REDIRECT_URL }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build -x test

      - name: Test with Gradle
        run: SPRING_PROFILES_ACTIVE=[dev] ./gradlew test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1  # Region to access CodeGuru

      # Add CodeGuru Reviewer Action
#      - name: CodeGuru Reviewer
#        uses: aws-actions/codeguru-reviewer@v1.1
#        with:
##          build_path: build # build artifact(s) directory
#          s3_bucket: codeguru-reviewer-bucket  # S3 Bucket with "codeguru-reviewer-*" prefix

      # Upload results into GitHub
      - name: Upload review result
        if: ${{ github.event_name != 'push' }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: codeguru-results.sarif.json